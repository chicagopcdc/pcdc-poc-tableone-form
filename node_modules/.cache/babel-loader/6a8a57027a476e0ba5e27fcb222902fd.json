{"ast":null,"code":"var _jsxFileName = \"/home/qzhou/test_react/form_01/src/components/Form.js\";\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange_g_name = event => {\n      const values = this.state.values;\n      values.groupingVariable.name = event.target.value;\n      console.log(\"asdasdsad\");\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_TrueIf = event => {\n      const values = this.state.values;\n      values.groupingVariable.trueIf.operator = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_value = event => {\n      const values = this.state.values;\n      values.groupingVariable.trueIf.value = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_TrueLable = event => {\n      const values = this.state.values;\n      values.groupingVariable.label.true = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_FalseLable = event => {\n      const values = this.state.values;\n      values.groupingVariable.label.false = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        value: 'coconut',\n        value_1: 'xxx'\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(this.state.values);\n      event.preventDefault();\n    };\n\n    this.state = {\n      values: {\n        groupingVariable: {\n          name: \"SMN2\",\n          trueIf: {\n            value: \"1\",\n            operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n\n          },\n          label: {\n            true: \"\",\n            false: \"\"\n          }\n        },\n        covariates: [{\n          \"name\": \"\",\n          \"label\": \"\",\n          \"type\": \"\",\n          // \"categorical\" | \"bucketized\" | \"continous\"\n          \"unit\": 1,\n          // for bucketized or continuous variable only\n          \"cutoffs\": [],\n          // for bucketized variable only\n          \"values\": [],\n          // for categorical variable only\n          \"keys\": [] // optional; for bucketized or categorical variable only\n\n        }]\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"myForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Grouping variable\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"name:\", /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.values.groupingVariable.name,\n      onChange: this.handleChange_g_name.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SMN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"SMN\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SMN2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"SMN2\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"True if...:\", /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.values.groupingVariable.trueIf.operator,\n      onChange: this.handleChange_g_TrueIf.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"eq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"eq\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"gt\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"gte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"lt\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"lte\"))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"value\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.values.groupingVariable.trueIf.value,\n      onChange: this.handleChange_g_value.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"\\\"True\\\" group label:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.values.groupingVariable.label.true,\n      onChange: this.handleChange_g_TrueLable.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"\\\"False\\\" group label:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.values.groupingVariable.label.false,\n      onChange: this.handleChange_g_FalseLable.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Covariate\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"variable 1\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.handleReset.bind(this),\n      value: \"Reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 84\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 47\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/qzhou/test_react/form_01/src/components/Form.js"],"names":["React","Form","Component","constructor","props","handleChange_g_name","event","values","state","groupingVariable","name","target","value","console","log","setState","handleChange_g_TrueIf","trueIf","operator","handleChange_g_value","handleChange_g_TrueLable","label","true","handleChange_g_FalseLable","false","handleReset","value_1","handleSubmit","preventDefault","covariates","bind","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = (\n      {\n        values:\n        {\n          groupingVariable: {\n            name: \"SMN2\",\n            trueIf: {\n              value: \"1\",\n              operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n            },\n            label: {\n              true: \"\",\n              false: \"\"\n            }\n          },\n          covariates: [\n            {\n              \"name\": \"\",\n              \"label\": \"\",\n              \"type\": \"\", // \"categorical\" | \"bucketized\" | \"continous\"\n              \"unit\": 1, // for bucketized or continuous variable only\n              \"cutoffs\": [], // for bucketized variable only\n              \"values\": [], // for categorical variable only\n              \"keys\": [] // optional; for bucketized or categorical variable only\n            }\n          ]\n        }\n      }\n    );\n\n \n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange_g_name = (event) => {\n    const values=this.state.values;\n    values.groupingVariable.name = event.target.value;\n    console.log(\"asdasdsad\")\n    this.setState({values});\n  }\n\n  handleChange_g_TrueIf = (event) => {\n    const values=this.state.values;\n    values.groupingVariable.trueIf.operator = event.target.value;\n    this.setState({values});\n  }\n\n  handleChange_g_value = (event) => {\n    const values=this.state.values;\n    values.groupingVariable.trueIf.value = event.target.value;\n    this.setState({values});\n  }\n\n  handleChange_g_TrueLable = (event) => {\n    const values=this.state.values;\n    values.groupingVariable.label.true = event.target.value;\n    this.setState({values});\n  }\n\n  handleChange_g_FalseLable = (event) => {\n    const values=this.state.values;\n    values.groupingVariable.label.false = event.target.value;\n    this.setState({values});\n  }\n\n  \n\n  handleReset =() => {\n    this.setState({value: 'coconut',value_1: 'xxx'});\n  }\n\n  handleSubmit = (event) => {\n    console.log(this.state.values);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form id=\"myForm\" onSubmit={this.handleSubmit}>\n\n        <h2>Grouping variable</h2>\n        <label>\n        name:\n          <select value={this.state.values.groupingVariable.name} onChange={this.handleChange_g_name.bind(this)}>\n            <option value=\"SMN\">SMN</option>\n            <option value=\"SMN2\">SMN2</option>\n          </select>\n        </label><br />\n\n        <label>\n        True if...:\n          <select value={this.state.values.groupingVariable.trueIf.operator} onChange={this.handleChange_g_TrueIf.bind(this)}>\n            <option value=\"eq\">eq</option>\n            <option value=\"gt\">gt</option>\n            <option value=\"gte\">gte</option>\n            <option value=\"lt\">lt</option>\n            <option value=\"lte\">lte</option>\n          </select>\n        </label> \n\n        <label>\n          value\n        <input type=\"number\"    value={this.state.values.groupingVariable.trueIf.value} onChange={this.handleChange_g_value.bind(this)} />\n        </label><br />\n\n        <label>\n         \"True\" group label:\n        <input type=\"text\" value={this.state.values.groupingVariable.label.true} onChange={this.handleChange_g_TrueLable.bind(this)} />\n        </label><br />\n\n        <label>\n        \"False\" group label:\n        <input type=\"text\" value={this.state.values.groupingVariable.label.false} onChange={this.handleChange_g_FalseLable.bind(this)} />\n        </label><br />\n\n     \n        <h2>Covariate</h2>   \n        \n        <h4>variable 1</h4>\n\n\n\n\n\n        <input type=\"button\" onClick={this.handleReset.bind(this)} value=\"Reset\" /><br />\n        <input type=\"submit\" value=\"Submit\" /><br />\n      </form>\n    );\n  }\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}