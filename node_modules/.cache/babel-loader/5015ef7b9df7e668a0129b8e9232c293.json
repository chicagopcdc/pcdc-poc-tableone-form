{"ast":null,"code":"var _jsxFileName = \"/home/qzhou/test_react/form_01/src/components/Form.js\";\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange_g_name = event => {\n      const values = this.state.values;\n      values.groupingVariable.name = event.target.value;\n      console.log(\"asdasdsad\");\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_TrueIf = event => {\n      const values = this.state.values;\n      values.groupingVariable.trueIf.operator = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_value = event => {\n      const values = this.state.values;\n      values.groupingVariable.trueIf.value = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_TrueLable = event => {\n      const values = this.state.values;\n      values.groupingVariable.label.true = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_g_FalseLable = event => {\n      const values = this.state.values;\n      values.groupingVariable.label.false = event.target.value;\n      this.setState({\n        values\n      });\n    };\n\n    this.addCovariate = event => {\n      console.log(\"addCovariate\");\n      const values = this.state.values;\n      values.covariates.push({\n        \"name\": \"\",\n        \"label\": \"\",\n        \"type\": \"\",\n        // \"categorical\" | \"bucketized\" | \"continous\"\n        \"unit\": 1,\n        // for bucketized or continuous variable only\n        \"cutoffs\": [],\n        // for bucketized variable only\n        \"values\": [],\n        // for categorical variable only\n        \"keys\": [] // optional; for bucketized or categorical variable only\n\n      });\n      this.setState({\n        values\n      });\n    };\n\n    this.removeCovariate = index => {\n      console.log(\"removeCovariate\");\n      const values = this.state.values;\n      values.covariates.splice(index, 1);\n      this.setState({\n        values\n      });\n    };\n\n    this.handleChange_v_name = (event, index) => {\n      console.log(\"removeCovariate\");\n      const values = this.state.values;\n      values.covariates[index].name = event.target.value;\n      console.log(\"asdasdsad\");\n      this.setState({\n        values\n      });\n    };\n\n    this.handleReset = () => {\n      console.log(\"reset test\");\n      this.setState({\n        values: {\n          groupingVariable: {\n            name: \"SMN2\",\n            trueIf: {\n              value: \"1\",\n              operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n\n            },\n            label: {\n              true: \"\",\n              false: \"\"\n            }\n          },\n          covariates: [{\n            \"name\": \"\",\n            \"label\": \"\",\n            \"type\": \"\",\n            // \"categorical\" | \"bucketized\" | \"continous\"\n            \"unit\": 1,\n            // for bucketized or continuous variable only\n            \"cutoffs\": [],\n            // for bucketized variable only\n            \"values\": [],\n            // for categorical variable only\n            \"keys\": [] // optional; for bucketized or categorical variable only\n\n          }]\n        }\n      });\n    };\n\n    this.handleSubmit = event => {\n      console.log(this.state.values);\n      event.preventDefault();\n    };\n\n    this.state = {\n      values: {\n        groupingVariable: {\n          name: \"SMN2\",\n          trueIf: {\n            value: \"1\",\n            operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n\n          },\n          label: {\n            true: \"\",\n            false: \"\"\n          }\n        },\n        covariates: [{\n          \"name\": \"\",\n          \"label\": \"\",\n          \"type\": \"\",\n          // \"categorical\" | \"bucketized\" | \"continous\"\n          \"unit\": 1,\n          // for bucketized or continuous variable only\n          \"cutoffs\": [],\n          // for bucketized variable only\n          \"values\": [],\n          // for categorical variable only\n          \"keys\": [] // optional; for bucketized or categorical variable only\n\n        }]\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      id: \"myForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Grouping variable\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, \"name:\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        margin: \"5px 20px\"\n      },\n      value: this.state.values.groupingVariable.name,\n      onChange: this.handleChange_g_name.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SMN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"SMN\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"SMN2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, \"SMN2\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"True if...:\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        margin: \"5px 20px\"\n      },\n      value: this.state.values.groupingVariable.trueIf.operator,\n      onChange: this.handleChange_g_TrueIf.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"eq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"eq\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"gt\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"gte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"gte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"lt\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"lte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"lte\"))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, \"value:\", /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        margin: \"5px 20px\"\n      },\n      type: \"number\",\n      value: this.state.values.groupingVariable.trueIf.value,\n      onChange: this.handleChange_g_value.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"\\\"True\\\" group label:\", /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        margin: \"5px 20px\"\n      },\n      type: \"text\",\n      value: this.state.values.groupingVariable.label.true,\n      onChange: this.handleChange_g_TrueLable.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, \"\\\"False\\\" group label:\", /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        margin: \"5px 20px\"\n      },\n      type: \"text\",\n      value: this.state.values.groupingVariable.label.false,\n      onChange: this.handleChange_g_FalseLable.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        display: \"inline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Covariate\"), \"   \", /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        float: \"right\"\n      },\n      onClick: this.addCovariate.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 62\n      }\n    }, \"Add variable\")), this.state.values.covariates.map((covariate, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          display: \"inline\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, \"variable \", index + 1), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          float: \"right\"\n        },\n        onClick: this.removeCovariate.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 79\n        }\n      }, \"Delete variable\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 188\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, \"Name:\", /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          margin: \"5px 20px\"\n        },\n        value: covariate.name,\n        onChange: this.handleChange_g_name.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"SMN\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, \"SMN\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"SMN2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, \"SMN2\"))), \"\\u3000\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, \"Label:\", /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          margin: \"5px 20px\"\n        },\n        type: \"text\",\n        value: covariate.label,\n        onChange: this.handleChange_g_value.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 20\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, \"Type:\", /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          margin: \"5px 20px\"\n        },\n        value: covariate.name,\n        onChange: this.handleChange_g_name.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"categorical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"categorical\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"bucketized\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, \"bucketized\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"continous\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }\n      }, \"continous\"))), \"\\u3000\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, \"Unit:\", /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          margin: \"5px 20px\"\n        },\n        type: \"number\",\n        value: covariate.label,\n        onChange: this.handleChange_g_value.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 20\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"5px 20px\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"200px\",\n        height: \"40px\",\n        backgroundColor: 'white',\n        margin: '5px'\n      },\n      type: \"button\",\n      onClick: this.handleReset.bind(this),\n      value: \"Reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 170\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"5px 20px\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        width: \"200px\",\n        height: \"40px\",\n        backgroundColor: 'yellow',\n        margin: '5px'\n      },\n      type: \"submit\",\n      value: \"Apply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 133\n      }\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/qzhou/test_react/form_01/src/components/Form.js"],"names":["React","Form","Component","constructor","props","handleChange_g_name","event","values","state","groupingVariable","name","target","value","console","log","setState","handleChange_g_TrueIf","trueIf","operator","handleChange_g_value","handleChange_g_TrueLable","label","true","handleChange_g_FalseLable","false","addCovariate","covariates","push","removeCovariate","index","splice","handleChange_v_name","handleReset","handleSubmit","preventDefault","bind","render","margin","display","float","map","covariate","justifyContent","alignItems","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = (\n      {\n        values:\n        {\n          groupingVariable: {\n            name: \"SMN2\",\n            trueIf: {\n              value: \"1\",\n              operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n            },\n            label: {\n              true: \"\",\n              false: \"\"\n            }\n          },\n          covariates: [\n            {\n              \"name\": \"\",\n              \"label\": \"\",\n              \"type\": \"\", // \"categorical\" | \"bucketized\" | \"continous\"\n              \"unit\": 1, // for bucketized or continuous variable only\n              \"cutoffs\": [], // for bucketized variable only\n              \"values\": [], // for categorical variable only\n              \"keys\": [] // optional; for bucketized or categorical variable only\n            }\n          ]\n        }\n      }\n    );\n\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  handleChange_g_name = (event) => {\n    const values = this.state.values;\n    values.groupingVariable.name = event.target.value;\n    console.log(\"asdasdsad\")\n    this.setState({ values });\n  }\n\n  handleChange_g_TrueIf = (event) => {\n    const values = this.state.values;\n    values.groupingVariable.trueIf.operator = event.target.value;\n    this.setState({ values });\n  }\n\n  handleChange_g_value = (event) => {\n    const values = this.state.values;\n    values.groupingVariable.trueIf.value = event.target.value;\n    this.setState({ values });\n  }\n\n  handleChange_g_TrueLable = (event) => {\n    const values = this.state.values;\n    values.groupingVariable.label.true = event.target.value;\n    this.setState({ values });\n  }\n\n  handleChange_g_FalseLable = (event) => {\n    const values = this.state.values;\n    values.groupingVariable.label.false = event.target.value;\n    this.setState({ values });\n  }\n\n\n  addCovariate = (event) => {\n    console.log(\"addCovariate\")\n    const values = this.state.values;\n    values.covariates.push({\n\n      \"name\": \"\",\n      \"label\": \"\",\n      \"type\": \"\", // \"categorical\" | \"bucketized\" | \"continous\"\n      \"unit\": 1, // for bucketized or continuous variable only\n      \"cutoffs\": [], // for bucketized variable only\n      \"values\": [], // for categorical variable only\n      \"keys\": [] // optional; for bucketized or categorical variable only\n\n    });\n    this.setState({ values });\n  }\n\n  removeCovariate = (index) => {\n    console.log(\"removeCovariate\")\n    const values = this.state.values;\n    values.covariates.splice(index, 1);\n    this.setState({ values });\n  }\n\n  handleChange_v_name = (event,index) => {\n    console.log(\"removeCovariate\")\n    const values = this.state.values;\n    values.covariates[index].name = event.target.value;\n    console.log(\"asdasdsad\")\n    this.setState({ values });\n  }\n\n\n  handleReset = () => {\n    console.log(\"reset test\");\n    this.setState(\n      {\n        values:\n        {\n          groupingVariable: {\n            name: \"SMN2\",\n            trueIf: {\n              value: \"1\",\n              operator: \"eq\" // \"eq\" | \"gt\" | \"gte\" | \"lt\" | \"lte\"\n            },\n            label: {\n              true: \"\",\n              false: \"\"\n            }\n          },\n          covariates: [\n            {\n              \"name\": \"\",\n              \"label\": \"\",\n              \"type\": \"\", // \"categorical\" | \"bucketized\" | \"continous\"\n              \"unit\": 1, // for bucketized or continuous variable only\n              \"cutoffs\": [], // for bucketized variable only\n              \"values\": [], // for categorical variable only\n              \"keys\": [] // optional; for bucketized or categorical variable only\n            }\n          ]\n        }\n      }\n    );\n  }\n\n\n  handleSubmit = (event) => {\n    console.log(this.state.values);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form id=\"myForm\" onSubmit={this.handleSubmit}>\n\n        <h2>Grouping variable</h2>\n        <label >\n          name:\n          <select style={{ margin: \"5px 20px\"  }} value={this.state.values.groupingVariable.name} onChange={this.handleChange_g_name.bind(this)}>\n            <option value=\"SMN\">SMN</option>\n            <option value=\"SMN2\">SMN2</option>\n          </select>\n        </label><br />\n\n        <label>\n          True if...:\n          <select style={{ margin: \"5px 20px\" }} value={this.state.values.groupingVariable.trueIf.operator} onChange={this.handleChange_g_TrueIf.bind(this)}>\n            <option value=\"eq\">eq</option>\n            <option value=\"gt\">gt</option>\n            <option value=\"gte\">gte</option>\n            <option value=\"lt\">lt</option>\n            <option value=\"lte\">lte</option>\n          </select>\n        </label>\n\n        <label>\n          value:\n        <input style={{ margin: \"5px 20px\" }} type=\"number\" value={this.state.values.groupingVariable.trueIf.value} onChange={this.handleChange_g_value.bind(this)} />\n        </label><br />\n\n        <label>\n          \"True\" group label:\n        <input style={{ margin: \"5px 20px\" }} type=\"text\" value={this.state.values.groupingVariable.label.true} onChange={this.handleChange_g_TrueLable.bind(this)} />\n        </label><br />\n\n        <label>\n          \"False\" group label:\n        <input style={{ margin: \"5px 20px\" }} type=\"text\" value={this.state.values.groupingVariable.label.false} onChange={this.handleChange_g_FalseLable.bind(this)} />\n        </label><br />\n\n        <div style={{ margin: \"20px 0\" }}>\n          <h2 style={{ display: \"inline\" }}>Covariate</h2>   <button style={{ float: \"right\" }} onClick={this.addCovariate.bind(this)}>Add variable</button>\n        </div>\n\n        {\n          this.state.values.covariates.map((covariate, index) => {\n            return (\n              <div key={index}>\n\n                <h4 style={{ display: \"inline\" }} >variable {index + 1}</h4>  <button style={{ float: \"right\" }} onClick={this.removeCovariate.bind(this, index)}>Delete variable</button> <br />\n\n\n                <label>\n                  Name:\n                    <select style={{ margin: \"5px 20px\" }} value={covariate.name} onChange={this.handleChange_g_name.bind(this, index)}>\n                    <option value=\"SMN\">SMN</option>\n                    <option value=\"SMN2\">SMN2</option>\n                  </select>\n                </label>　<br />\n\n                <label>\n                  Label:\n                   <input style={{ margin: \"5px 20px\" }} type=\"text\" value={covariate.label} onChange={this.handleChange_g_value.bind(this)} />\n                </label><br />\n\n                <label>\n                  Type:\n                    <select style={{ margin: \"5px 20px\" }} value={covariate.name} onChange={this.handleChange_g_name.bind(this)}>\n                    <option value=\"categorical\">categorical</option>\n                    <option value=\"bucketized\">bucketized</option>\n                    <option value=\"continous\">continous</option>\n                  </select>\n                </label>　<br />\n\n                <label>\n                  Unit:\n                   <input style={{ margin: \"5px 20px\" }} type=\"number\" value={covariate.label} onChange={this.handleChange_g_value.bind(this)} />\n                </label><br />\n\n                <br />\n              </div>\n            );\n\n          })\n        }\n        <div style={{ margin: \"5px 20px\", display: 'flex' , justifyContent: 'center',alignItems: 'center' }}>\n          <input style={{ width: \"200px\", height: \"40px\", backgroundColor: 'white', margin: '5px' }} type=\"button\" onClick={this.handleReset.bind(this)} value=\"Reset\" /><br />\n        </div>\n        <div style={{ margin: \"5px 20px\", display: 'flex' , justifyContent: 'center',alignItems: 'center' }}>\n          <input style={{ width: \"200px\", height: \"40px\", backgroundColor: 'yellow', margin: '5px' }} type=\"submit\" value=\"Apply\" /><br />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}